package  fendou;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class ATM extends JFrame implements ActionListener {
	int mon = 0;
	static String tmp1 = "0", tmp2 = "0", tmp3 = "0";
	private JButton btnDown = new JButton("登录");
	private JButton btnCheck = new JButton("查询");
	private JButton btnSave = new JButton("存款");
	private JButton btnOut = new JButton("取款");
	private JButton btnChangepassword = new JButton("修改密码");
	private JButton btnClose = new JButton("退出");

	static String card = "123456";
	static String password = "123456";
	private int money = 10000;

	public ATM() {
		load();
	}

	public void load() {
		GridLayout grid = new GridLayout(2, 2);
		this.setLayout(grid);

		this.setTitle("ATM柜员机模拟程序");
		this.setSize(800, 800);
		this.setVisible(true);
		this.setResizable(false);
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);

		this.btnDown.setActionCommand("登录");
		this.btnCheck.setActionCommand("查询");
		this.btnSave.setActionCommand("存款");
		this.btnOut.setActionCommand("取款");
		this.btnChangepassword.setActionCommand("修改密码");
		btnClose.addActionListener(new ActionListener() {
			// 退出系统
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		btnDown.addActionListener(this);
		btnCheck.addActionListener(this);
		btnSave.addActionListener(this);
		btnOut.addActionListener(this);
		btnChangepassword.addActionListener(this);
		btnCheck.addActionListener(this);

		this.add(btnDown);
		this.add(btnCheck);
		this.add(btnSave);
		this.add(btnOut);
		this.add(btnChangepassword);
		this.add(btnClose);

		btnCheck.setEnabled(false);
		btnSave.setEnabled(false);
		btnOut.setEnabled(false);
		btnChangepassword.setEnabled(false);
		btnClose.setEnabled(false);
	}

	public static void main(String[] args) throws Exception {// 主函数
		ATM atm = new ATM();

	}

	/*
	 * （非 Javadoc）
	 * 
	 * @see;
	 * java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
	 */
	public void actionPerformed(ActionEvent e) {

		String command = e.getActionCommand();
		if (command.equals("登录")) {
			this.btnDown.setText("登录");
			tmp1 = JOptionPane.showInputDialog(this, "请输入卡号...");
			tmp2 = JOptionPane.showInputDialog(this, "请输入密码...");
			if (!tmp1.equals(card) || !tmp2.equals(password)) { // 判断输入卡号和密码是否正确
				JOptionPane.showMessageDialog(this, "卡号或密码错误，请重新输入...");
			} else {
				JOptionPane.showMessageDialog(this, "欢迎使用..."); // 进入系统
				btnCheck.setEnabled(true);
				btnSave.setEnabled(true);
				btnOut.setEnabled(true);
				btnChangepassword.setEnabled(true);
				btnClose.setEnabled(true);
			}
		} else if (command.equals("查询")) { // 查询功能
			this.btnCheck.setText("查询");
			JOptionPane.showMessageDialog(this, "查询" + "您的帐户余额为：" + this.money);
		} else if (command.equals("存款")) { // 存款功能
			this.btnSave.setText("存款");
			String mone = JOptionPane.showInputDialog(this, "请输入存款金额...", "");
			mon = Integer.parseInt(mone);
			System.out.println(mon);
			if (mon < 0 || mon % 100 != 0) { // 判断存款金额是否小于零或者不为100的倍数
				JOptionPane.showMessageDialog(this, "您输入的存款金额不正确，请重新输入...");
			} else {
				JOptionPane.showMessageDialog(this, "您存入" + mon);
				this.money += mon;
			}
		} else if (command.equals("取款")) { // 取款功能
			this.btnOut.setText("取款");
			String mone = JOptionPane.showInputDialog(this, "请输入取款金额...", "");
			int mon = Integer.parseInt(mone);

			System.out.println(mon);
			if (mon < 0 || mon % 100 != 0 || mon > money || mon > 5000) { // 判断取款金额是否小于零或者不为100的倍数或者取款金额大于5000
				JOptionPane.showMessageDialog(this, "您输入的取款金额不正确，请重新输入...");
			} else {
				JOptionPane.showMessageDialog(this, "您取出" + mon);
				this.money -= mon;
			}
		} else if (command.equals("修改密码")) { // 修改密码功能
			this.btnChangepassword.setText("修改密码");
			tmp1 = JOptionPane.showInputDialog(this, "请输入原密码...");
			if (!tmp1.equals(password)) {
				JOptionPane.showMessageDialog(this, "密码错误, 请重新修改");
			} else {
				tmp2 = JOptionPane.showInputDialog(this, "请输入新密码...");
				tmp3 = JOptionPane.showInputDialog(this, "请再输入新密码...");
				if (tmp2.equals(tmp3) && ((CharSequence) tmp2).length() >= 6
						&& !judge(tmp2) && !tmp1.equals(tmp2)) { // 判断两次新密码是否一致或者密码位数是否小于6位或者密码每位数都相同
					JOptionPane.showMessageDialog(this, "修改成功");
					// this.password = tmp3;
				} else {
					JOptionPane
							.showMessageDialog(this,
									"修改失败，您两次输入的新密码不一致\n或新密码小于6位\n或密码每位数都相同\n或者新旧密码一样\n返回主界面");
				}
			}
		}
	}

	/* 遍历，判断新密码是否全为一样的数字 */
	public static boolean judge(String tmp22) {
		char ch = ((CharSequence) tmp22).charAt(1);
		for (int i = 0; i < ((CharSequence) tmp22).length(); i++) {
			if (ch == ((CharSequence) tmp22).charAt(i)) {
				return true;
			} else {
				return false;
			}
		}
		return true;
	}
}
